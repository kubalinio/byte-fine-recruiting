/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as AppSettingsLayoutImport } from './routes/_app/settings/_layout'
import { Route as AppDocsLayoutDocsImport } from './routes/_app/docs/_layout-docs'
import { Route as AppSettingsLayoutIndexImport } from './routes/_app/settings/_layout.index'
import { Route as AppSettingsLayoutSubscriptionsImport } from './routes/_app/settings/_layout.subscriptions'
import { Route as AppSettingsLayoutProfileImport } from './routes/_app/settings/_layout.profile'
import { Route as AppDocsLayoutDocsUsersIndexImport } from './routes/_app/docs/_layout-docs/users/index'
import { Route as AppDocsLayoutDocsIntroductionIndexImport } from './routes/_app/docs/_layout-docs/introduction/index'
import { Route as AppDocsLayoutDocsAboutIndexImport } from './routes/_app/docs/_layout-docs/about/index'
import { Route as AppDocsLayoutDocsUsersIdIndexImport } from './routes/_app/docs/_layout-docs/users/$id/index'

// Create Virtual Routes

const AppSettingsImport = createFileRoute('/_app/settings')()
const AppDocsImport = createFileRoute('/_app/docs')()
const AppDocsLayoutDocsHelpIndexLazyImport = createFileRoute(
  '/_app/docs/_layout-docs/help/',
)()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppDocsRoute = AppDocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => AppRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AppSettingsLayoutRoute = AppSettingsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppSettingsRoute,
} as any)

const AppDocsLayoutDocsRoute = AppDocsLayoutDocsImport.update({
  id: '/_layout-docs',
  getParentRoute: () => AppDocsRoute,
} as any)

const AppSettingsLayoutIndexRoute = AppSettingsLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppSettingsLayoutRoute,
} as any)

const AppSettingsLayoutSubscriptionsRoute =
  AppSettingsLayoutSubscriptionsImport.update({
    id: '/subscriptions',
    path: '/subscriptions',
    getParentRoute: () => AppSettingsLayoutRoute,
  } as any)

const AppSettingsLayoutProfileRoute = AppSettingsLayoutProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppSettingsLayoutRoute,
} as any)

const AppDocsLayoutDocsHelpIndexLazyRoute =
  AppDocsLayoutDocsHelpIndexLazyImport.update({
    id: '/help/',
    path: '/help/',
    getParentRoute: () => AppDocsLayoutDocsRoute,
  } as any).lazy(() =>
    import('./routes/_app/docs/_layout-docs/help/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDocsLayoutDocsUsersIndexRoute =
  AppDocsLayoutDocsUsersIndexImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AppDocsLayoutDocsRoute,
  } as any)

const AppDocsLayoutDocsIntroductionIndexRoute =
  AppDocsLayoutDocsIntroductionIndexImport.update({
    id: '/introduction/',
    path: '/introduction/',
    getParentRoute: () => AppDocsLayoutDocsRoute,
  } as any)

const AppDocsLayoutDocsAboutIndexRoute =
  AppDocsLayoutDocsAboutIndexImport.update({
    id: '/about/',
    path: '/about/',
    getParentRoute: () => AppDocsLayoutDocsRoute,
  } as any)

const AppDocsLayoutDocsUsersIdIndexRoute =
  AppDocsLayoutDocsUsersIdIndexImport.update({
    id: '/users/$id/',
    path: '/users/$id/',
    getParentRoute: () => AppDocsLayoutDocsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/docs': {
      id: '/_app/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof AppDocsImport
      parentRoute: typeof AppImport
    }
    '/_app/docs/_layout-docs': {
      id: '/_app/docs/_layout-docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof AppDocsLayoutDocsImport
      parentRoute: typeof AppDocsRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppImport
    }
    '/_app/settings/_layout': {
      id: '/_app/settings/_layout'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsLayoutImport
      parentRoute: typeof AppSettingsRoute
    }
    '/_app/settings/_layout/profile': {
      id: '/_app/settings/_layout/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AppSettingsLayoutProfileImport
      parentRoute: typeof AppSettingsLayoutImport
    }
    '/_app/settings/_layout/subscriptions': {
      id: '/_app/settings/_layout/subscriptions'
      path: '/subscriptions'
      fullPath: '/settings/subscriptions'
      preLoaderRoute: typeof AppSettingsLayoutSubscriptionsImport
      parentRoute: typeof AppSettingsLayoutImport
    }
    '/_app/settings/_layout/': {
      id: '/_app/settings/_layout/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AppSettingsLayoutIndexImport
      parentRoute: typeof AppSettingsLayoutImport
    }
    '/_app/docs/_layout-docs/about/': {
      id: '/_app/docs/_layout-docs/about/'
      path: '/about'
      fullPath: '/docs/about'
      preLoaderRoute: typeof AppDocsLayoutDocsAboutIndexImport
      parentRoute: typeof AppDocsLayoutDocsImport
    }
    '/_app/docs/_layout-docs/introduction/': {
      id: '/_app/docs/_layout-docs/introduction/'
      path: '/introduction'
      fullPath: '/docs/introduction'
      preLoaderRoute: typeof AppDocsLayoutDocsIntroductionIndexImport
      parentRoute: typeof AppDocsLayoutDocsImport
    }
    '/_app/docs/_layout-docs/users/': {
      id: '/_app/docs/_layout-docs/users/'
      path: '/users'
      fullPath: '/docs/users'
      preLoaderRoute: typeof AppDocsLayoutDocsUsersIndexImport
      parentRoute: typeof AppDocsLayoutDocsImport
    }
    '/_app/docs/_layout-docs/help/': {
      id: '/_app/docs/_layout-docs/help/'
      path: '/help'
      fullPath: '/docs/help'
      preLoaderRoute: typeof AppDocsLayoutDocsHelpIndexLazyImport
      parentRoute: typeof AppDocsLayoutDocsImport
    }
    '/_app/docs/_layout-docs/users/$id/': {
      id: '/_app/docs/_layout-docs/users/$id/'
      path: '/users/$id'
      fullPath: '/docs/users/$id'
      preLoaderRoute: typeof AppDocsLayoutDocsUsersIdIndexImport
      parentRoute: typeof AppDocsLayoutDocsImport
    }
  }
}

// Create and export the route tree

interface AppDocsLayoutDocsRouteChildren {
  AppDocsLayoutDocsAboutIndexRoute: typeof AppDocsLayoutDocsAboutIndexRoute
  AppDocsLayoutDocsIntroductionIndexRoute: typeof AppDocsLayoutDocsIntroductionIndexRoute
  AppDocsLayoutDocsUsersIndexRoute: typeof AppDocsLayoutDocsUsersIndexRoute
  AppDocsLayoutDocsHelpIndexLazyRoute: typeof AppDocsLayoutDocsHelpIndexLazyRoute
  AppDocsLayoutDocsUsersIdIndexRoute: typeof AppDocsLayoutDocsUsersIdIndexRoute
}

const AppDocsLayoutDocsRouteChildren: AppDocsLayoutDocsRouteChildren = {
  AppDocsLayoutDocsAboutIndexRoute: AppDocsLayoutDocsAboutIndexRoute,
  AppDocsLayoutDocsIntroductionIndexRoute:
    AppDocsLayoutDocsIntroductionIndexRoute,
  AppDocsLayoutDocsUsersIndexRoute: AppDocsLayoutDocsUsersIndexRoute,
  AppDocsLayoutDocsHelpIndexLazyRoute: AppDocsLayoutDocsHelpIndexLazyRoute,
  AppDocsLayoutDocsUsersIdIndexRoute: AppDocsLayoutDocsUsersIdIndexRoute,
}

const AppDocsLayoutDocsRouteWithChildren =
  AppDocsLayoutDocsRoute._addFileChildren(AppDocsLayoutDocsRouteChildren)

interface AppDocsRouteChildren {
  AppDocsLayoutDocsRoute: typeof AppDocsLayoutDocsRouteWithChildren
}

const AppDocsRouteChildren: AppDocsRouteChildren = {
  AppDocsLayoutDocsRoute: AppDocsLayoutDocsRouteWithChildren,
}

const AppDocsRouteWithChildren =
  AppDocsRoute._addFileChildren(AppDocsRouteChildren)

interface AppSettingsLayoutRouteChildren {
  AppSettingsLayoutProfileRoute: typeof AppSettingsLayoutProfileRoute
  AppSettingsLayoutSubscriptionsRoute: typeof AppSettingsLayoutSubscriptionsRoute
  AppSettingsLayoutIndexRoute: typeof AppSettingsLayoutIndexRoute
}

const AppSettingsLayoutRouteChildren: AppSettingsLayoutRouteChildren = {
  AppSettingsLayoutProfileRoute: AppSettingsLayoutProfileRoute,
  AppSettingsLayoutSubscriptionsRoute: AppSettingsLayoutSubscriptionsRoute,
  AppSettingsLayoutIndexRoute: AppSettingsLayoutIndexRoute,
}

const AppSettingsLayoutRouteWithChildren =
  AppSettingsLayoutRoute._addFileChildren(AppSettingsLayoutRouteChildren)

interface AppSettingsRouteChildren {
  AppSettingsLayoutRoute: typeof AppSettingsLayoutRouteWithChildren
}

const AppSettingsRouteChildren: AppSettingsRouteChildren = {
  AppSettingsLayoutRoute: AppSettingsLayoutRouteWithChildren,
}

const AppSettingsRouteWithChildren = AppSettingsRoute._addFileChildren(
  AppSettingsRouteChildren,
)

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppDocsRoute: typeof AppDocsRouteWithChildren
  AppSettingsRoute: typeof AppSettingsRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppDocsRoute: AppDocsRouteWithChildren,
  AppSettingsRoute: AppSettingsRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AppIndexRoute
  '/docs': typeof AppDocsLayoutDocsRouteWithChildren
  '/settings': typeof AppSettingsLayoutRouteWithChildren
  '/settings/profile': typeof AppSettingsLayoutProfileRoute
  '/settings/subscriptions': typeof AppSettingsLayoutSubscriptionsRoute
  '/settings/': typeof AppSettingsLayoutIndexRoute
  '/docs/about': typeof AppDocsLayoutDocsAboutIndexRoute
  '/docs/introduction': typeof AppDocsLayoutDocsIntroductionIndexRoute
  '/docs/users': typeof AppDocsLayoutDocsUsersIndexRoute
  '/docs/help': typeof AppDocsLayoutDocsHelpIndexLazyRoute
  '/docs/users/$id': typeof AppDocsLayoutDocsUsersIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AppIndexRoute
  '/docs': typeof AppDocsLayoutDocsRouteWithChildren
  '/settings': typeof AppSettingsLayoutIndexRoute
  '/settings/profile': typeof AppSettingsLayoutProfileRoute
  '/settings/subscriptions': typeof AppSettingsLayoutSubscriptionsRoute
  '/docs/about': typeof AppDocsLayoutDocsAboutIndexRoute
  '/docs/introduction': typeof AppDocsLayoutDocsIntroductionIndexRoute
  '/docs/users': typeof AppDocsLayoutDocsUsersIndexRoute
  '/docs/help': typeof AppDocsLayoutDocsHelpIndexLazyRoute
  '/docs/users/$id': typeof AppDocsLayoutDocsUsersIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_app/': typeof AppIndexRoute
  '/_app/docs': typeof AppDocsRouteWithChildren
  '/_app/docs/_layout-docs': typeof AppDocsLayoutDocsRouteWithChildren
  '/_app/settings': typeof AppSettingsRouteWithChildren
  '/_app/settings/_layout': typeof AppSettingsLayoutRouteWithChildren
  '/_app/settings/_layout/profile': typeof AppSettingsLayoutProfileRoute
  '/_app/settings/_layout/subscriptions': typeof AppSettingsLayoutSubscriptionsRoute
  '/_app/settings/_layout/': typeof AppSettingsLayoutIndexRoute
  '/_app/docs/_layout-docs/about/': typeof AppDocsLayoutDocsAboutIndexRoute
  '/_app/docs/_layout-docs/introduction/': typeof AppDocsLayoutDocsIntroductionIndexRoute
  '/_app/docs/_layout-docs/users/': typeof AppDocsLayoutDocsUsersIndexRoute
  '/_app/docs/_layout-docs/help/': typeof AppDocsLayoutDocsHelpIndexLazyRoute
  '/_app/docs/_layout-docs/users/$id/': typeof AppDocsLayoutDocsUsersIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/docs'
    | '/settings'
    | '/settings/profile'
    | '/settings/subscriptions'
    | '/settings/'
    | '/docs/about'
    | '/docs/introduction'
    | '/docs/users'
    | '/docs/help'
    | '/docs/users/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/docs'
    | '/settings'
    | '/settings/profile'
    | '/settings/subscriptions'
    | '/docs/about'
    | '/docs/introduction'
    | '/docs/users'
    | '/docs/help'
    | '/docs/users/$id'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_auth/forgot-password'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_app/'
    | '/_app/docs'
    | '/_app/docs/_layout-docs'
    | '/_app/settings'
    | '/_app/settings/_layout'
    | '/_app/settings/_layout/profile'
    | '/_app/settings/_layout/subscriptions'
    | '/_app/settings/_layout/'
    | '/_app/docs/_layout-docs/about/'
    | '/_app/docs/_layout-docs/introduction/'
    | '/_app/docs/_layout-docs/users/'
    | '/_app/docs/_layout-docs/help/'
    | '/_app/docs/_layout-docs/users/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/docs",
        "/_app/settings"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/forgot-password",
        "/_auth/sign-in",
        "/_auth/sign-up"
      ]
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/docs": {
      "filePath": "_app/docs",
      "parent": "/_app",
      "children": [
        "/_app/docs/_layout-docs"
      ]
    },
    "/_app/docs/_layout-docs": {
      "filePath": "_app/docs/_layout-docs.tsx",
      "parent": "/_app/docs",
      "children": [
        "/_app/docs/_layout-docs/about/",
        "/_app/docs/_layout-docs/introduction/",
        "/_app/docs/_layout-docs/users/",
        "/_app/docs/_layout-docs/help/",
        "/_app/docs/_layout-docs/users/$id/"
      ]
    },
    "/_app/settings": {
      "filePath": "_app/settings",
      "parent": "/_app",
      "children": [
        "/_app/settings/_layout"
      ]
    },
    "/_app/settings/_layout": {
      "filePath": "_app/settings/_layout.tsx",
      "parent": "/_app/settings",
      "children": [
        "/_app/settings/_layout/profile",
        "/_app/settings/_layout/subscriptions",
        "/_app/settings/_layout/"
      ]
    },
    "/_app/settings/_layout/profile": {
      "filePath": "_app/settings/_layout.profile.tsx",
      "parent": "/_app/settings/_layout"
    },
    "/_app/settings/_layout/subscriptions": {
      "filePath": "_app/settings/_layout.subscriptions.tsx",
      "parent": "/_app/settings/_layout"
    },
    "/_app/settings/_layout/": {
      "filePath": "_app/settings/_layout.index.tsx",
      "parent": "/_app/settings/_layout"
    },
    "/_app/docs/_layout-docs/about/": {
      "filePath": "_app/docs/_layout-docs/about/index.tsx",
      "parent": "/_app/docs/_layout-docs"
    },
    "/_app/docs/_layout-docs/introduction/": {
      "filePath": "_app/docs/_layout-docs/introduction/index.tsx",
      "parent": "/_app/docs/_layout-docs"
    },
    "/_app/docs/_layout-docs/users/": {
      "filePath": "_app/docs/_layout-docs/users/index.tsx",
      "parent": "/_app/docs/_layout-docs"
    },
    "/_app/docs/_layout-docs/help/": {
      "filePath": "_app/docs/_layout-docs/help/index.lazy.tsx",
      "parent": "/_app/docs/_layout-docs"
    },
    "/_app/docs/_layout-docs/users/$id/": {
      "filePath": "_app/docs/_layout-docs/users/$id/index.tsx",
      "parent": "/_app/docs/_layout-docs"
    }
  }
}
ROUTE_MANIFEST_END */
